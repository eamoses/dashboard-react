{"version":3,"sources":["spotify.js","Home/Music/Music.js","Home/TodaysDate/TodaysDate.js","Home/Todo/Todo.js","Home/Time/Time.js","Home/Weather/Weather.js","Home/Home.js","Home/Greeting/Greeting.js","Menu/Menu.js","config.js","hash.js","Settings/Settings.js","Contact/Contact.js","About/About.js","App/App.js","serviceWorker.js","index.js"],"names":["Spotify","token","deviceId","loggedIn","error","trackName","artistName","albumName","playing","position","duration","handleLogin","_this","this","playerCheckInterval","setInterval","checkForPlayer","window","clearInterval","player","Player","name","getOAuthToken","cb","createEventHandlers","connect","_this2","on","e","console","state","onStateChanged","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","data","device_id","wrap","_context","prev","next","transferPlaybackHere","stop","_x","apply","arguments","fetch","method","headers","Authorization","Content-Type","body","JSON","stringify","device_ids","play","catch","log","currentTrack","track_window","current_track","paused","album","artists","map","artist","join","onPrevClick","previousTrack","onPlayClick","togglePlay","onNextClick","nextTrack","Music","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","spotify","react_default","createElement","className","onClick","react_router_dom","to","Component","TodaysDate","getDate","today","Date","month","getMonth","day","getDay","numberDay","year","getFullYear","months","dayOfWeek","_this$getDate","id","localStorage","getItem","href","replace","target","rel","Todo","toggleHidden","setState","isHidden","addTodo","input","length","newTodo","value","guid","todos","concat","toConsumableArray","handleInput","evt","keyCode","removeTodo","todo","objectSpread","deleted","setTimeout","filter","t","parse","c","r","Math","random","toString","todoInput","focus","setItem","Todo_DisplayItem","assign","key","placeholder","onChange","onKeyUp","ref","DisplayItem","type","Time","timeFunc","time","toLocaleString","hour","minute","hour12","hours","getHours","message","_this$timeFunc","Weather","success","url","callback","xhr","XMLHttpRequest","open","onreadystatechange","readyState","responseText","send","get","coords","latitude","longitude","cypherKey","split","char","String","fromCharCode","charCodeAt","decryptKey","temp","round","list","main","temp_max","description","weather","homeCity","city","alert","componentDidMount","navigator","geolocation","getCurrentPosition","_this$state","Home","lsName","names","Home_Time_Time","Home_Music_Music","Home_Weather_Weather","Home_TodaysDate_TodaysDate","calendarHref","addHref","Home_Todo_Todo","Greeting","greetingToggle","nameVal","onKeyPress","toggleName","setNameState","Menu","Home_Greeting_Greeting","exact","activeStyle","menu","react_router","path","render","src_Home_Home","scopes","hash","location","substring","reduce","initial","item","parts","decodeURIComponent","Settings","_token","access_token","getUserInfo","axios","then","response","user","display_name","username","email","country","removeItem","_this3","isPlaying","reset","x","Contact","action","htmlFor","About","App","event","charCode","saveToLS","parsingNameLS","parsingCalLS","src_Menu_Menu","route","src_Settings_Settings","src_About_About","src_Contact_Contact","Boolean","hostname","match","ReactDOM","src_App_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f21dcee.chunk.js","sourcesContent":["const Spotify = {\n    token: \"\",\n    deviceId: \"\",\n    loggedIn: false,\n    error: \"\",\n    trackName: \"Track Name\",\n    artistName: \"Artist Name\",\n    albumName: \"Album Name\",\n    playing: false,\n    position: 0,\n    duration: 1,\n    handleLogin: function(token){\n        if (token !== \"\") {\n            this.token = token;\n            this.loggedIn = true;\n            this.playerCheckInterval = setInterval(() => this.checkForPlayer(token), 1000);\n        }\n    },\n    checkForPlayer(token) {\n        if (window.Spotify !== null) {\n            clearInterval(this.playerCheckInterval);\n            this.player = new window.Spotify.Player({\n                name: \"Emily's Spotify Player\",\n                getOAuthToken: cb => { cb(token); },\n            });\n            this.createEventHandlers(token);\n            this.player.connect();\n        }\n    },\n    createEventHandlers(token) {\n        this.player.on('initialization_error', e => { console.error(e); });\n        this.player.on('authentication_error', e => {\n          console.error(e);\n          this.loggedIn = false;\n        });\n        this.player.on('account_error', e => { console.error(e); });\n        this.player.on('playback_error', e => { console.error(e); });\n        this.player.on('player_state_changed', state => this.onStateChanged(state));\n        this.player.on('ready', async data => {\n            let { device_id } = data;\n            this.deviceId = device_id;\n            this.transferPlaybackHere(this.deviceId, token);\n        });\n    },\n    transferPlaybackHere(deviceId, token) {\n        this.deviceId = deviceId;\n        this.token = token;\n        // https://beta.developer.spotify.com/documentation/web-api/reference/player/transfer-a-users-playback/\n        fetch(\"https://api.spotify.com/v1/me/player\", {\n            method: \"PUT\",\n            headers: {\n                'Authorization': 'Bearer ' + token,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"device_ids\": [ deviceId ],\n                \"play\": true\n            }),\n        }).catch(error => console.log(\"There was an error\", error));\n    },\n    onStateChanged(state) {\n        if (state !== null) {\n            const {\n                current_track: currentTrack,\n                // position,\n                // duration,\n            } = state.track_window;\n            // const trackName = currentTrack.name;\n            // const albumName = currentTrack.album.name;\n            // const artistName = currentTrack.artists.map(artist => artist.name).join(\", \");\n            const playing = !state.paused;\n            // this.position;\n            // this.duration;\n            this.trackName = currentTrack.name;\n            this.albumName = currentTrack.album.name;\n            this.artistName = currentTrack.artists.map(artist => artist.name).join(\", \");\n            this.playing = playing\n        } else {\n            this.error =\"Looks like you might have swapped to another device?\";\n        }\n    },\n    onPrevClick() {\n        this.player.previousTrack();\n    },  \n    onPlayClick() {\n        this.player.togglePlay();\n    },  \n    onNextClick() {\n        this.player.nextTrack();\n    }\n}\n\nexport default Spotify;","import React, {Component} from 'react';\nimport './Music.css'\nimport {Link} from 'react-router-dom';\nimport Spotify from '../../spotify'\n\nclass Music extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            spotify: Spotify\n        }\n        this.playerCheckInterval = null;\n      }\n    render() {\n        return (\n            <div>\n                { Spotify.error && <p>Error: {Spotify.error }</p>}\n                <div className=\"music\">\n                    now playing on spotify\n                </div>\n                { Spotify.loggedIn ? (\n                    <div className=\"info\">\n                        <div className=\"currently-playing\">\n                            <h2 className=\"song-name\">{Spotify.albumName}</h2>\n                            <h2 className=\"song-name\">{Spotify.trackName}</h2>\n                            <h3 className=\"artist-name\">{Spotify.artistName}</h3>\n                        </div>\n                        <div className=\"controls\">\n                            {/* <div className=\"option\"><i className=\"fas fa-bars\"></i></div> */}\n                            {/* <div className=\"volume\"><i className=\"fas fa-volume-up\"></i></div> */}\n                            <div className=\"previous\" onClick={() => Spotify.onPrevClick()}><i className=\"fas fa-backward\"></i></div>\n                            <div className=\"play\" onClick={() => Spotify.onPlayClick()}>{ Spotify.playing ? \"Pause\" : \"Play\"}</div>\n                            <div className=\"next\" onClick={() => Spotify.onNextClick()}><i className=\"fas fa-forward\"></i></div>\n                            {/* <div className=\"shuffle\"><i className=\"fas fa-random\"></i></div> */}\n                            {/* <div className=\"add\"><i className=\"fas fa-plus\"></i></div> */}\n                        </div>\n                    </div>\n                ) : (\n                    <p><Link to=\"/settings\">go to settings to log in to Spotify</Link></p>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default Music;","import React, {Component} from 'react';\nimport './TodaysDate.css'\nimport {Link} from 'react-router-dom';\n\nclass TodaysDate extends Component {\n    getDate = () => {\n        let today = new Date();\n        let month = today.getMonth();\n        let day = today.getDay();\n        let numberDay = today.getDate();\n        let year = today.getFullYear();\n        let weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n        let dayOfWeek = weekDays[day]\n         return {month, numberDay, year, months, dayOfWeek}\n    }\n    render() {\n        const {month, numberDay, year, months, dayOfWeek} = this.getDate();\n        return (\n            <div className=\"todays-date\">\n                <h1 id=\"date\">{dayOfWeek}</h1>\n                <h1 id=\"date\">{months[month]} {numberDay},  {year}</h1>\n                <br></br>\n                { !localStorage.getItem('calendar') ? (\n                         <div></div>\n                    ) : (\n                        <a href={localStorage.getItem('calendar').replace(/\"/g,\"\")} target=\"_blank\" rel=\"noopener noreferrer\">Go to your calendar</a>\n                    )\n                }\n                <p><Link to=\"/settings\">go to settings to edit calendar</Link></p>\n            </div>\n        )\n    }\n}\n\nexport default TodaysDate;","import React, {Component} from 'react';\nimport './Todo.css'\n\nclass Todo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = JSON.parse(localStorage.getItem('todoapp')) || {\n            isHidden: true,\n            input: '',\n            todos: [{\n              value: '',\n              id: this.guid()\n            }]\n        };\n    }\n    toggleHidden = () => {\n        this.setState({\n          isHidden: !this.state.isHidden\n        })\n    }\n    addTodo = () => {\n        if (this.state.input.length > 0) {\n            const newTodo = {\n                value: this.state.input,\n                id: this.guid()\n            };\n            this.setState(state => ({\n                todos: [ ...state.todos, newTodo],\n                input: ''\n            }));\n        }\n    }\n    handleInput = (evt) => {\n        if (evt.keyCode === 13) {\n            this.addTodo();\n        } else {\n            this.setState({\n                input: evt.target.value\n            });\n        }\n    }\n    removeTodo = (id) => {\n        this.setState(state => {\n          return{\n            todos: state.todos.map(todo => {\n              if(todo.id !== id){\n                return todo;\n              } else {\n                return { ...todo, deleted: true }\n              }\n            })\n          };\n        });\n        setTimeout(() => {\n          this.setState(state => {\n            return{\n              todos: state.todos.filter(t => t.id !== id)\n            }});\n        }, 1000);\n    }\n    guid(){\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n          var r = Math.random()*16|0, v = c === 'x' ? r : (`r&0x3|0x8`);\n          return v.toString(16);\n        });\n    }\n    componentDidMount(){\n        this.todoInput.focus();\n    }\n    componentDidUpdate(){\n        localStorage.setItem('todoapp', JSON.stringify(this.state));\n    }\n    \n    render() {\n        return (\n            <div>\n                <div className=\"reminders\">\n                    <p>reminders</p>\n                    <div className=\"reminder--btns\" onClick={this.toggleHidden}>\n                        <i className=\"fas fa-ellipsis-h\"></i>\n                    </div>\n                </div>\n                <div>\n                        { this.state.todos.map(t => \n                            <DisplayItem \n                                key={t.id} {...t}\n                                onClick={()=>this.removeTodo(t.id)}\n                            />\n                        )}\n                </div>\n                <div className={this.state.isHidden ? 'hidden' : null}>\n                    <div className=\"addItems\">\n                        <input\n                            name=\"item\"\n                            placeholder=\"What do you need to do\"\n                            value={this.state.input} \n                            onChange={this.handleInput} \n                            onKeyUp={this.handleInput}\n                            ref={(input) => { this.todoInput = input; }}\n                        />\n                        <br></br>\n                        <button onClick={this.addTodo}>Add Item</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst DisplayItem = ({value, onClick, deleted}) => (\n    <div className=\"reminders--list inline\">\n        { value ? (\n            <ul className=\"things inline\">\n                <li>\n                    <label className=\"todo\">\n                        <span className={`todo ${deleted ? 'deleted' : ''}`}>\n                        <input className=\"todo-checkbox inline\" type=\"checkbox\" onClick={onClick} />\n                        <span className=\"todo-switch\"></span>\n                            <label className=\"todo-label\">\n                                {value}\n                            </label>\n                        </span>\n                    </label>\n                </li>\n            </ul>\n        ) : (\n            <div className=\"space\">\n            <span></span>\n            <span></span>\n            </div>\n        )}\n    </div>\n);\n\nexport default Todo;","import React, {Component} from 'react';\nimport './Time.css';\n\nclass Time extends Component {\n    timeFunc = () => {\n        // Current time display\n        let today = new Date();\n        let time = today.toLocaleString('en-US', {hour: 'numeric', minute: 'numeric', hour12: true});\n        let hours = today.getHours();    \n        // Message based on the time\n        let message = '';\n        if (hours < 11) {\n            message = 'good morning';\n        } else if (hours > 17) {\n            message = 'good evening';\n        } else {\n            message = 'good afternoon';\n        }\n        return {message, time}\n    }\n    render() {\n        const {message, time} = this.timeFunc();\n        return (\n            <div>\n                <div id=\"time\" className=\"time\">{time}</div>\n                <div id=\"greeting\" className=\"timeGreeting\">{message}</div>\n            </div>\n        )\n    }\n}\n\nexport default Time;","import React, {Component} from 'react';\nimport './Weather.css';\n\nclass Weather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            temp: this.temp,\n            description: this.description,\n            homeCity: this.homeCity\n        };\n    }\n    success = (position) => {\n        const get = (url, callback) => {\n            let xhr = new XMLHttpRequest();\n            xhr.open('GET', url, true);\n            xhr.onreadystatechange = function() {\n                if(xhr.readyState === 4) {\n                    if(callback) callback(JSON.parse(xhr.responseText))\n                }\n            }\n            xhr.send(null)\n        }\n        function decryptKey (cypherKey) {\n            var key = cypherKey.split('');\n            key = key.map(function(char) {\n                return String.fromCharCode(char.charCodeAt() + 1); \n            });\n            key = key.join('');\n            return key;\n        }\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        var cypherKey1 = 'a7073/1d8a1`c6a8d038c817/3e2`be8';\n        var apiKey = decryptKey(cypherKey1);\n        var APIendpoint = 'https://api.openweathermap.org/data/2.5/forecast?lat='+lat+'&lon='+lon+'&APPID='+apiKey+'&units=imperial'\n        get(APIendpoint, (data) => {\n            this.setState({\n                temp: Math.round(data.list[\"0\"].main.temp_max),\n                description: data.list[\"0\"].weather[\"0\"].description,\n                homeCity: data.city.name\n            })\n        })\n    }\n    error = () => {\n        alert('Please turn on your browsers geolocation to get local weather information.');\n    }\n    componentDidMount = () => {\n        if(!navigator.geolocation) {\n            alert('For the love of all that is good, please cease use of Internet Explorer!');\n        } else {\n            navigator.geolocation.getCurrentPosition(this.success, this.error);\n        }\n    }\n    render() {\n        const {temp, description, homeCity} = this.state;\n        return (\n            <div>\n                { navigator.geolocation && temp ? (\n                    <div>\n                        <div id=\"weatherWidget\" className=\"weatherWidget\">{temp}°</div>\n                        <div id=\"description\" className=\"description\">{description}</div>\n                        <div id=\"homeCity\" className=\"homeCity\">{homeCity}</div>\n                    </div>\n                ) : (\n                    <div className=\"weatherLocation\">Make sure your browser's location is turned on to recieve current weather.</div>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default Weather;","import React, {Component} from 'react';\nimport './Home.css';\nimport Music from './Music/Music';\nimport TodaysDate from './TodaysDate/TodaysDate'\nimport Todo from './Todo/Todo';\nimport Time from './Time/Time';\nimport Weather from './Weather/Weather';\n\nclass Home extends Component {\n    componentWillUnmount () {\n        console.log('About UNMOUNT');\n    }\n    render() {\n        let lsName;\n        if (localStorage.names) {\n            lsName = localStorage.getItem('names').replace(/\"/g,\"\");\n        }\n        return (\n            <div className=\"main-grid\">\n                <div className=\"block one\">\n                    <Time />\n                    <p>{lsName}</p>\n                </div>\n  \n                <div className=\"block two\">\n                    <Music />\n                </div>\n  \n                <div className=\"block three\">\n                    <Weather />\n                </div>\n  \n                <div className=\"block four\">\n                    <TodaysDate \n                        calendarHref={this.props.calendarHref}\n                        addHref={this.props.addHref}\n                    />\n                </div>\n  \n                <div className=\"block five\">\n                    <Todo />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport './Greeting.css';\n\nclass Greeting extends Component {\n    render() {\n        let lsName;\n        const greetingToggle = this.props.greetingToggle;\n        if (greetingToggle) {\n            lsName = localStorage.getItem('names').replace(/\"/g,\"\");\n        }\n        return (\n            <div>\n                <div className=\"user\">\n                    { (greetingToggle) ? (\n                        <div id=\"greetingDisplay\" className=\"greeting\">{lsName}</div>\n                    ) : (\n                        <div id=\"greetingContainer\">\n                            <div className=\"text\">Please enter your full name</div>\n                            <div className=\"name\"><input id=\"name\" \n                                value={this.props.nameVal} \n                                onKeyPress={this.props.toggleName} \n                                onChange={char => this.props.setNameState(char)} \n                            /></div>\n                        </div>\n                    ) }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Greeting;","import React, {Component} from 'react';\nimport {\n    NavLink,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport menu from './Menu.css';\nimport Home from '../Home/Home'\nimport Greeting from '../Home/Greeting/Greeting'\n\nclass Menu extends Component {\n    componentWillUnmount () {\n        console.log('About UNMOUNT');\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"leftside-menu menu\" id=\"menu\">\n                    <Greeting\n                        nameVal={this.props.nameVal}\n                        setNameState={this.props.setNameState}\n                        greetingToggle={this.props.greetingToggle}\n                        toggleName={this.props.toggleName}\n                    />\n                    <NavLink className=\"item\" exact to=\"/\" activeStyle={{ menu }}>home</NavLink>\n                    <NavLink className=\"item\" exact to=\"/settings\" activeStyle={{ menu }}>settings</NavLink>\n                    <NavLink className=\"item\" exact to=\"/about\" activeStyle={{ menu }}>about</NavLink>\n                    <NavLink className=\"item\" exact to=\"/contact\" activeStyle={{ menu }}>contact</NavLink>\n                </div>\n                <div>\n                    <Switch>\n                        <Route exact path=\"/\" render={(props) => \n                            <Home {...props}\n                                calendarHref={this.props.calendarHref}\n                                addHref={this.props.addHref}\n                            />}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Menu;","export const authEndpoint = \"https://accounts.spotify.com/authorize\";\nexport const clientId = \"279710054a5e456ca6a80d4561e56868\";\nexport const redirectUri = \"https://eamoses.github.io/settings/\"; // http://localhost:3000/settings/\nexport const scopes = [\n    \"user-read-private\",\n    \"user-read-email\",\n    \"streaming\", \n    \"user-read-birthdate\"\n];","const hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;","import React, {Component} from 'react';\nimport './Settings.css';\nimport Spotify from '../spotify'\nimport { authEndpoint, clientId, redirectUri, scopes } from \"../config\";\nimport axios from 'axios';\nimport hash from \"../hash\";\n\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            spotify: Spotify\n        }\n        this.playerCheckInterval = null;\n    }\n    componentDidMount() {\n        let _token = hash.access_token\n        if (_token) {\n          this.setState({\n            token: _token,\n            playing: true\n          });\n            if (!Spotify.playing) {\n                this.getUserInfo(_token);\n            }\n        }\n    }\n    getUserInfo(token) {\n        axios.get('https://api.spotify.com/v1/me/', {\n          headers: {\n            'Authorization': 'Bearer ' + token\n          }\n        })\n        .then( (response) => {\n          this.setState({\n            user: {\n              name: `${response.data.display_name}`,\n              username: `${response.data.id}`,\n              email: `${response.data.email}`,\n              location: `${response.data.country}`\n            },\n            token: token\n          })\n          Spotify.handleLogin(token)\n        })\n        .catch( (error) => {\n          console.log(error);\n        })\n        .then( () => {\n        })\n    }\n    reset() {\n        localStorage.removeItem(\"names\");\n        window.location.href=\"https://eamoses.github.io/dashboard-react\";\n    }\n    render() {\n        let lsName;\n        if (localStorage.names) {\n            lsName = localStorage.getItem('names').replace(/\"/g,\"\");\n        }\n        const isPlaying = this.state.playing;\n        return (\n            <div className=\"settings-grid\">\n                <div className=\"block one\">\n                    <div className=\"name-heading\">Change display name</div>\n                    <br></br>\n                    { localStorage.names ? (\n                        <span className=\"name-change\">{lsName} <span className=\"remove-name\" onClick={this.reset}>&nbsp;&nbsp;&#8594;&nbsp;&nbsp;reset</span></span>\n                    ) : (\n                        <div className=\"name-change remove-name\">&#8592; Enter your name in the space provided on the Menu.</div>\n                    )}\n                </div>\n\n                <div className=\"block two\">\n                    <div className=\"name-heading\">Add a link to your calendar</div>\n                    <br></br>\n                    <input className=\"cal-link\"\n                        value={this.props.calendarHref}\n                        onChange={x => this.props.addHref(x)}\n                    />\n                </div>\n\n                <div className=\"block three\">\n                    {this.state.spotify.error && <p>Error: {this.state.spotify.error}</p>}\n                    { !isPlaying ? (\n                        <div className=\"App-intro\">\n                            <a className=\"btn btn--loginApp-link\" href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}>Log in to Spotify</a>\n                        </div>\n                    ) : (\n                        <div>You are currently logged in to Spotify. Refresh the browser if you need to enter a new Web Token.</div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Settings;","import React, {Component} from 'react';\nimport './Contact.css';\n\nclass Contact extends Component {\n\n    render() {\n        return (\n            <div className=\"contact\">\n                <div className=\"contact-header\">\n                    Contact me\n                </div>\n                <div className=\"contact-form\">\n                    <div id=\"contact\" className=\"centered\">\n                        <div className=\"formContainer\">\n                            <form method=\"POST\" action=\"https://formspree.io/eamoses@gmail.com\">\n                                <fieldset>\n                                    <label htmlFor=\"name\">NAME</label>\n                                    <input type=\"text\" id=\"name\" name=\"user_name\" />\n                                    <label htmlFor=\"email\">EMAIL</label>\n                                    <input type=\"email\" id=\"mail\" name=\"user_email\" />\n                                </fieldset>\n                                <fieldset>\n                                    <label htmlFor=\"bio\">MESSAGE</label>\n                                    <textarea id=\"bio\" name=\"user_bio\"></textarea>\n                                </fieldset>\n                                <button type=\"submit\" className=\"submit\">SEND</button>\n                                <button type=\"reset\" className=\"reset\">RESET</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Contact;","import React, {Component} from 'react';\nimport './About.css';\nimport {Link} from 'react-router-dom';\n\nclass About extends Component {\n\n    render() {\n        return (\n            <div className=\"about\">\n                <div className=\"headline\">About the developer:\n                    <a className=\"linkMe\" href=\"http://emilyannemoses.com\" rel=\"noopener noreferrer\" target=\"_blank\">Emily Anne Moses</a>\n                </div>\n                <div>\n                    <p>\n                        Greetings, I'm Emily. I've been a professional software developer for four years and counting & I've worked on enterprise software in Python, Go and JavaScript.\n                        I was first introduced to React in 2016, and since then I've worked with AngularJS, RiotJS, VueJS and LoneJS.\n                    </p>\n                    <p>\n                        I'm also a <i>widget dashboard enthusiast</i> and I've <a href=\"https://eamoses.github.io/widget-dashboard/\" rel=\"noopener noreferrer\" target=\"_blank\">made one before based on the Momentum Dash design.</a>\n                    </p>\n                </div>\n                <div>\n                    <p>\n                        I am not a designer.  Fortunately, people with beautiful design chops exist, and for this project I borrowed Julie Park's <a href=\"https://codepen.io/juliepark/pen/KLWmxO\" rel=\"noopener noreferrer\" target=\"_blank\">CodePen</a> and build functionality into it!\n                    </p>\n                </div>\n                <div>\n                    <p>\n                        The widget dashboard first saves your name to your local storage. This can be deleted and reset in the Settings component. \n                        The weather widget uses a weather API through the browser to find the your location and current weather as long as you approve these settings. It also displays the current time and date.\n                        You have the option to link a personal online Calendar if you wish. The To-do list saves the items to local storage, and these items are deleted when checked off.\n                    </p>\n                    <p>\n                        Implementation of the Spotify API was the most complex. I hadn't worked with this API since 2016 and it has changed drastically! By using Spotify's client side OAuth API and their Web Playback SDK, I was able to create a user flow where you may log in with your Spotify credentials and your most recently played list will start playing in the browser.\n                    </p>\n                </div>\n                <div>\n                    <p>\n                        If you'd like to get in touch, please don't hesitate to <Link to=\"/contact\">Contact me!</Link> I'm always excited to meet other enthusiasts!\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Menu from '../Menu/Menu';\nimport Home from '../Home/Home'\nimport Settings from '../Settings/Settings'\nimport Contact from '../Contact/Contact'\nimport About from '../About/About'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameVal: '',\n      greetingToggle: false,\n      calendarHref: '',\n    }\n  }\n  componentDidMount(){\n    if (localStorage.names) {\n      this.setState({\n        greetingToggle: true\n      })\n    }\n  }\n  toggleName = (event) => {\n    if (event.charCode === 13 && this.state.nameVal.length > 0) {\n      this.setState({\n        greetingToggle: true\n      });\n    }\n  }\n  saveToLS = (value) => {\n    let parsingNameLS = JSON.parse(localStorage.getItem('names'));\n    parsingNameLS = value\n    localStorage.setItem('names', JSON.stringify(parsingNameLS));\n  }\n  setNameState = (char) => {\n    this.setState({\n        nameVal: char.target.value\n    });\n    this.saveToLS(char.target.value)\n  }\n  addHref = (event) => {\n    // https://calendar.google.com/calendar/r/day\n    this.setState({\n        calendarHref: event.target.value\n    })\n    const calendarHref = event.target.value;\n    let parsingCalLS = JSON.parse(localStorage.getItem('calendar'));\n    parsingCalLS = calendarHref;\n    localStorage.setItem('calendar', JSON.stringify(parsingCalLS))\n  }\n  render() {\n    return (\n      <div id=\"dashboard-container\" className=\"container\">\n        <BrowserRouter>\n        <Menu\n          addHref={this.addHref}\n          calendarHref={this.state.calendarHref}\n          nameVal={this.state.nameVal}\n          setNameState={this.setNameState}\n          greetingToggle={this.state.greetingToggle}\n          toggleName={this.toggleName}\n        />\n          <Switch>\n            <Route exact path=\"/dashboard-react\"\n              render={route => <Home {...route} \n              addHref={this.addHref}\n              calendarHref={this.state.calendarHref}\n              nameVal={this.state.nameVal}\n              setNameState={this.setNameState}\n              greetingToggle={this.state.greetingToggle}\n              toggleName={this.toggleName}\n              />}\n            />\n            <Route exact path=\"/settings\"\n              render={route => <Settings {...route} \n              calendarHref={this.props.calendarHref}\n              addHref={this.props.addHref}\n            />}\n            />\n            <Route exact path=\"/about\"\n              render={route => <About {...route} />}\n            />\n            <Route exact path=\"/contact\"\n              render={route => <Contact {...route} />}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}